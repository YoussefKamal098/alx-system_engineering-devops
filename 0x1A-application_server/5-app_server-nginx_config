##
# Helpful resources for understanding Nginx configuration:
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# It's common practice to remove this file from `sites-enabled/`
# and keep it as a reference in `sites-available/`.
# This allows the file to be updated by the nginx packaging team.
#
# Configuration files provided by other applications like Drupal or WordPress
# are automatically loaded and can be accessed under a path with the package name,
# e.g., /drupal8.
#
# For more detailed examples, see `/usr/share/doc/nginx-doc/examples/`.
##

# Default server configuration
server {
    # Listen on port 80 for both IPv4 and IPv6, and set this as the default server
    listen 80 default_server;
    listen [::]:80 default_server;

    # SSL configuration (commented out as it's not enabled)
    #
    # listen 443 ssl default_server;
    # listen [::]:443 ssl default_server;
    #
    # Disable gzip for SSL traffic (due to a known issue)
    # See: https://bugs.debian.org/773332
    #
    # Ensure a secure SSL configuration by reading up on ssl_ciphers
    # See: https://bugs.debian.org/765782
    #
    # Self-signed certs generated by the ssl-cert package should not be used in production
    # include snippets/snakeoil.conf;

    # Root directory for the server
    root /var/www/html;

    # Default files to serve (e.g., index.html)
    index index.html index.htm index.nginx-debian.html;

    # Server name (IP address or domain)
    server_name 54.87.211.213;

    # Serve static files for /hbnb_static from a specific directory
    location /hbnb_static {
        alias /data/web_static/current;
    }

    # Add a custom header to identify the server
    add_header X-Served-By "333491-web-01";

    # Custom 404 error page
    error_page 404 /error_404.html;

    # Redirect /redirect_me to a specific URL
    rewrite ^/redirect_me https://www.youtube.com/watch?v=QH2-TGUlwu4 permanent;

    # Configuration for the custom 404 error page
    location = /error_404.html {
        internal;
    }
    # Proxy requests to /airbnb-onepage to a local Flask application running on port 5000
    location = /airbnb-onepage/ {
        proxy_pass http://127.0.0.1:5000/airbnb-onepage/;
    }

    #Proxy requests to /number_odd_or_even/<n:int> to a local Flask application running on port 5001
    location ~ ^/airbnb-dynamic/number_odd_or_even/(\d+)$ {
        proxy_pass http://127.0.0.1:5001/number_odd_or_even/$1;
    }

    #Proxy requests to /api/* to a local Flask application Restful api running on port 5002
    location /api {
        proxy_pass tp://127.0.0.1:5002/api;
    }

    #Proxy requests to /2-hbnb to a local Flask application web_dynamic running on port 5003
    location / {
        proxy_pass http://127.0.0.1:5003/2-hbnb;
    }

    # serve static content for Flask Application web_dynamic
    location /static {
        alias web_dynamic/static/;
    }

    # Handle requests to the root of the website
    #location / {
    #   # Attempt to serve the request as a file, then as a directory,
    #    # and if that fails, return a 404 error
    #    try_files $uri $uri/ =404;
    #}

    # PHP handling (commented out as it's not enabled)
    #
    # location ~ \.php$ {
    #     include snippets/fastcgi-php.conf;
    #
    #     # Use php-fpm (via unix socket)
    #     fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
    #     # Or use php-cgi (via TCP socket)
    #     fastcgi_pass 127.0.0.1:9000;
    # }

    # Deny access to .htaccess files (commented out as it's not enabled)
    #
    # location ~ /\.ht {
    #     deny all;
    # }
}

# Example Virtual Host configuration for example.com (commented out as it's not enabled)
#
# server {
#     listen 80;
#     listen [::]:80;
#
#     server_name example.com;
#
#     root /var/www/example.com;
#     index index.html;
#
#     location / {
#         try_files $uri $uri/ =404;
#     }
# }
